# Allows multiple origins in CORS.
map $http_origin $origin {
  default "";
  "~${CORS_ALLOWED_ORIGINS}" $http_origin;
}

server {
  listen ${FRONTEND_PORT};
  listen  [::]:${FRONTEND_PORT};
  server_name _;
  server_tokens off;

  # Back-end server.
  location @backend  {
    # All headers must be duplicated.
    # (see https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/)

    if ($request_method = 'OPTIONS') {
      # Security headers.
      add_header 'Expect-CT' 'max-age=0' always;
      add_header 'X-Frame-Options' 'SAMEORIGIN' always;
      add_header 'X-DNS-Prefetch-Control' 'off' always;
      add_header 'Referrer-Policy' 'no-referrer' always;
      add_header 'X-Content-Type-Options' 'nosniff' always;
      add_header 'Content-Security-Policy' "${CSP}" always;
      add_header 'X-Permitted-Cross-Domain-Policies' 'none' always;
      add_header 'Strict-Transport-Security' 'max-age=123456; includeSubDomains' always;

      # CORS headers.
      add_header 'Content-Length' 0 always;
      add_header 'Access-Control-Max-Age' 300 always;
      add_header 'Access-Control-Allow-Origin' '$origin' always;
      add_header 'Content-Type' 'text/plain charset=UTF-8' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,PATCH,DELETE,OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Auhtorization,Accept,Content-Type' always;
      return 204;
    }

    # Security headers.
    add_header 'Expect-CT' 'max-age=0' always;
    add_header 'X-Frame-Options' 'SAMEORIGIN' always;
    add_header 'X-DNS-Prefetch-Control' 'off' always;
    add_header 'Referrer-Policy' 'no-referrer' always;
    add_header 'X-Content-Type-Options' 'nosniff' always;
    add_header 'Content-Security-Policy' "${CSP}" always;
    add_header 'X-Permitted-Cross-Domain-Policies' 'none' always;
    add_header 'Strict-Transport-Security' 'max-age=123456; includeSubDomains' always;

    # CORS headers.
    add_header 'Access-Control-Max-Age' 300 always;
    add_header 'Access-Control-Allow-Origin' '$origin' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,PATCH,DELETE,OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Auhtorization,Accept,Content-Type' always;

    proxy_pass ${BACKEND_URI};
    proxy_http_version 1.1;
  }

  # Static assets server.
  location / {
    try_files $uri @backend;
    root /var/www/html/public;
    expires 7d;
  }

  # Prevents showing sourcemaps in production.
  location ~* .map$ {
    access_log off;
    try_files __ @backend;
  }

  # Front-end healthcheck.
  location /health {
    access_log off;
    log_not_found off;
    return 200;
  }
}
